spring:
  profiles:
    active: "dev"
  jpa:
    database: POSTGRESQL
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false

server:
  port: 8081

logging:
  level:
    root: INFO
    com.eclinica.security: DEBUG
  #config: classpath:logback.xml
endpoints:
  enabled: true
  health:
    enabled: true

feign:
  compression:
    request:
      enabled: true
      mime-types: application/json
    response:
      enabled: true
  client:
    config:
      default:
        connectTimeout: 1000
        readTimeout: 60000
        decode404: false
        loggerLevel: ${LOG_LEVEL_FEIGN:full}

---

spring:
  profiles: "dev"
  datasource:
    url: jdbc:postgresql://localhost/e-clinica-security
    username: postgres
    password: 1234enter
    driver-class-name: org.postgresql.Driver
  security:
    oauth2:
      client:
        registration:
          keycloak: # <--- It's your custom client. I am using keycloak
            client-id: eclinica-security
            client-secret: 0d122f60-1516-4ed1-9f4b-e01e6224b3a7
            authorization-grant-type: client_credentials
            scope: openid # your scopes
        provider:
          keycloak: # <--- Here Registered my custom provider
            authorization-uri: http://localhost:8080/auth/realms/E-Clinica/protocol/openid-connect/authorize
            token-uri: http://localhost:8080/auth/realms/E-Clinica/protocol/openid-connect/token

## Keycloak configuration to validate jwt's token
keycloak:
  realm: E-Clinica
  auth-server-url: http://localhost:8080/auth
  ssl-required: external
  resource: eclinica-security
  credentials:
    secret: 0d122f60-1516-4ed1-9f4b-e01e6224b3a7
  use-resource-role-mappings: true
  bearer-only: true

## Eclinica config to use the svc account to integrate with keycloak's
eclinica:
  keycloak:
    client_id: eclinica-security
    secret: 0d122f60-1516-4ed1-9f4b-e01e6224b3a7
    host: http://localhost:8080/

keycloaks:
  context-path: /v1
  ribbon:
    NIWSServerListClassName: com.netflix.loadbalancer.ConfigurationBasedServerList
    listOfServers: http://localhost:8080/auth

feign:
  client:
    config:
      keycloaks:
        loggerLevel: full

---

spring:
  profiles: "prod"
  datasource:
    url: ${JDBC_URL}
    username: ${JDBC_USER}
    password: ${JDBC_PASSWORD}
    driver-class-name: org.postgresql.Driver

keycloak:
  realm: E-Clinica
  auth-server-url: ${KEYCLOAK_URL}
  ssl-required: external
  resource: eclinica-security
  credentials:
    secret: ${KEYCLOAK_SECRET}
  use-resource-role-mappings: true
  bearer-only: true

eclinica:
  keycloak:
    service-account:
      client_id: eclinica-security
      secret: ${KEYCLOAK_SECRET}
    host: ${KEYKLOAK_URL}